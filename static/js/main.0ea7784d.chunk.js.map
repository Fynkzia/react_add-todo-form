{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","React","memo","todo","title","completed","cn","TodoList","todos","map","preparedTodos","userId","usersFromServer","find","App","useState","setTitle","selectedUserName","setSelectedUserName","setTodos","isErrorOnTitle","setIsErrorOnTitle","isErrorOnUser","setIsErrorOnUser","action","method","onSubmit","event","preventDefault","trim","selectedUser","users","getUserByName","currentTodo","maxTodoId","Math","max","FormControl","sx","mb","error","TextField","type","label","value","onChange","currentTarget","placeholder","autoComplete","FormHelperText","InputLabel","Select","labelId","target","MenuItem","disabled","Button","variant","color","endIcon","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ea7784d.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\n\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = React.memo(\n  ({ todo }) => {\n    const {\n      id,\n      title,\n      user,\n      completed,\n    } = todo;\n\n    return (\n      <article\n        data-id={id}\n        className={cn(\n          'TodoInfo',\n          { 'TodoInfo--completed': completed },\n        )}\n      >\n        <h2 className=\"TodoInfo__title\">{title}</h2>\n        {user && (\n          <UserInfo user={user} />\n        )}\n      </article>\n    );\n  },\n);\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\n\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport TextField from '@mui/material/TextField';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nimport './App.scss';\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getUserByName(name: string, users: User[]) {\n  return users.find(user => name === user.name) || null;\n}\n\nexport const App: React.FC = () => {\n  const titleDefault = '';\n  const userNameDefault = '';\n\n  const [title, setTitle] = useState(titleDefault);\n  const [selectedUserName, setSelectedUserName] = useState(userNameDefault);\n  const [todos, setTodos] = useState(preparedTodos);\n  const [isErrorOnTitle, setIsErrorOnTitle] = useState(false);\n  const [isErrorOnUser, setIsErrorOnUser] = useState(false);\n\n  const clearForm = () => {\n    setTitle(titleDefault);\n    setSelectedUserName(userNameDefault);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.currentTarget.value);\n    setIsErrorOnTitle(false);\n  };\n\n  const handleUserChange = (event: SelectChangeEvent) => {\n    setSelectedUserName(event.target.value);\n    setIsErrorOnUser(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsErrorOnTitle(!title.trim());\n    setIsErrorOnUser(!selectedUserName);\n\n    if (title.trim() && selectedUserName) {\n      const selectedUser = getUserByName(selectedUserName, usersFromServer);\n\n      setTodos(currentTodo => {\n        const maxTodoId = Math.max(...currentTodo.map(todo => todo.id));\n\n        return [\n          ...currentTodo,\n          {\n            id: maxTodoId + 1,\n            title,\n            completed: false,\n            userId: selectedUser ? selectedUser.id : null,\n            user: selectedUser,\n          },\n        ];\n      });\n\n      clearForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        className=\"form\"\n        onSubmit={handleSubmit}\n      >\n        <FormControl\n          className=\"field\"\n          sx={{ mb: 2 }}\n          error={isErrorOnTitle}\n        >\n          <TextField\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            name=\"title\"\n            label=\"Your title:\"\n            error={isErrorOnTitle}\n            value={title}\n            onChange={handleTitleChange}\n            placeholder=\"Enter your title\"\n            autoComplete=\"off\"\n          />\n          {isErrorOnTitle && (\n            <FormHelperText className=\"error\">\n              Please enter a title\n            </FormHelperText>\n          )}\n        </FormControl>\n\n        <FormControl\n          className=\"field\"\n          sx={{ mb: 1 }}\n          error={isErrorOnUser}\n        >\n          <InputLabel id=\"userSelectLabel\">Select User</InputLabel>\n          <Select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            labelId=\"userSelectLabel\"\n            label=\"Select User\"\n            name=\"userSelect\"\n            value={selectedUserName}\n            onChange={handleUserChange}\n          >\n            <MenuItem value={userNameDefault} disabled>Choose a user</MenuItem>\n            {usersFromServer.map(user => (\n              <MenuItem key={user.id} value={user.name}>{user.name}</MenuItem>\n            ))}\n          </Select>\n\n          {isErrorOnUser && (\n            <FormHelperText className=\"error\">\n              Please choose a user\n            </FormHelperText>\n          )}\n        </FormControl>\n\n        <Button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          variant=\"contained\"\n          color=\"success\"\n          endIcon={<SendIcon />}\n        >\n          Add\n        </Button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}